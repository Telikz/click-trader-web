// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  CallReducerFlags,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  DbContext,
  ErrorContextInterface,
  Event,
  EventContextInterface,
  Identity,
  ProductType,
  ProductTypeElement,
  ReducerEventContextInterface,
  SubscriptionBuilderImpl,
  SubscriptionEventContextInterface,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
} from "@clockworklabs/spacetimedb-sdk";
import { StockType as __StockType } from "./stock_type_type";

export type Player = {
  identity: Identity,
  username: string | undefined,
  money: bigint,
  passiveIncome: bigint,
  clickPower: bigint,
  clickTimer: bigint,
  stockBuyFee: number,
  stockSellFee: number,
  online: boolean,
  upgrades: number[],
  stocks: __StockType[],
  lastClick: Timestamp,
};

/**
 * A namespace for generated helper functions.
 */
export namespace Player {
  /**
  * A function which returns this type represented as an AlgebraicType.
  * This function is derived from the AlgebraicType used to generate this type.
  */
  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createProductType([
      new ProductTypeElement("identity", AlgebraicType.createIdentityType()),
      new ProductTypeElement("username", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("money", AlgebraicType.createU256Type()),
      new ProductTypeElement("passiveIncome", AlgebraicType.createU128Type()),
      new ProductTypeElement("clickPower", AlgebraicType.createU128Type()),
      new ProductTypeElement("clickTimer", AlgebraicType.createI64Type()),
      new ProductTypeElement("stockBuyFee", AlgebraicType.createU16Type()),
      new ProductTypeElement("stockSellFee", AlgebraicType.createU16Type()),
      new ProductTypeElement("online", AlgebraicType.createBoolType()),
      new ProductTypeElement("upgrades", AlgebraicType.createArrayType(AlgebraicType.createU16Type())),
      new ProductTypeElement("stocks", AlgebraicType.createArrayType(__StockType.getTypeScriptAlgebraicType())),
      new ProductTypeElement("lastClick", AlgebraicType.createTimestampType()),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: Player): void {
    Player.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): Player {
    return Player.getTypeScriptAlgebraicType().deserialize(reader);
  }

}


